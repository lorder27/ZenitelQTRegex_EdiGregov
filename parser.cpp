#include "parser.h"
#include "conio.h"
#include "stdio.h"
#include <QTextStream>
#include <QIODevice>
#include <QFile>
#include <QDebug>
#include<QRegularExpression>
#include <QString>
#include <QTextStream>

#include "threading.h"

using namespace Qt;

Parser::Parser(QString input)
{  //^(?:(?:31(\/|-|\.)(?:0?[13578]|1[02]))\1|(?:(?:29|30)(\/|-|\.)(?:0?[13-9]|1[0-2])\2))(?:(?:1[6-9]|[2-9]\d)?\d{2})$|^(?:29(\/|-|\.)0?2\3(?:(?:(?:1[6-9]|[2-9]\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\d|2[0-8])(\/|-|\.)(?:(?:0?[1-9])|(?:1[0-2]))\4(((?:(?:1[6-9]|[2-9]\d)?\d{2})+)+) ([A-Z][-A-Za-z]+)+(( [A-Z][a-z-A-Z]+)+)?$
    //^(?:(?:31(\/|-|\.)(?:0?[13578]|1[02]))\1|(?:(?:29|30)(\/|-|\.)(?:0?[13-9]|1[0-2])\2))(?:(?:1[6-9]|[2-9]\d)?\d{2})$|^(?:29(\/|-|\.)0?2\3(?:(?:(?:1[6-9]|[2-9]\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\d|2[0-8])(\/|-|\.)(?:(?:0?[1-9])|(?:1[0-2]))\4(((?:(?:1[6-9]|[2-9]\d)?\d{2})+)+) ([a-z-A-Z]+( [a-z-A-Z]+)+)?$
    //QRegularExpression re("^(?:(?:31(\\/|-|\\.)(?:0?[13578]|1[02]))\\1|(?:(?:29|30)(\\/|-|\\.)(?:0?[13-9]|1[0-2])\\2))(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$|^(?:29(\\/|-|\\.)0?2\\3(?:(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\\d|2[0-8])(\\/|-|\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\4(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$");
    //QRegularExpression re("^[0-3][0-9]/[0-3][0-9]/(?:[0-9][0-9])?[0-9][0-9]$");

    //^(0[1-9]|1\d|2[0-8]|29(?=\.\d\d\.(?!1[01345789]00|2[1235679]00)\d\d(?:[02468][048]|[13579][26]))|30(?!\.02)|31(?=\.0[13578]|\.1[02]))\.(0[1-9]|1[0-2])\.([12]\d{3})?$

    Threading results;
    //QRegularExpression re("^([0-9]+(\\.[0-9]+)+) ([a-zA-Z]+( [a-zA-Z]+)+)?$");
    //QRegularExpression re("^(?:(?:31(\\/|-|\\.)(?:0?[13578]|1[02]))\\1|(?:(?:29|30)(\\/|-|\\.)(?:0?[13-9]|1[0-2])\\2))(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$|^(?:29(\\/|-|\\.)0?2\\3(?:(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\\d|2[0-8])(\\/|-|\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\4(((?:(?:1[6-9]|[2-9]\\d)?\\d{2})+)+) (([A-Z][A-Za-z]+(?!\\.*-$)([-])?){1,2}) (([A-Z][A-Za-z]+(?!\\.*-$)([-])?){1,2})$");
    QRegularExpression re("^((31[\\.](0[13578]|1[02])[\\.](18|19|20)[0-9]{2})|((29|30)[\\.](01|0[3-9]|1[1-2])[\\.](18|19|20)[0-9]{2})|((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[0-2])[\\.](18|19|20)[0-9]{2})|(29[\\.](02)[\\.](((18|19|20)(04|08|[2468][048]|[13579][26]))|2000))) ((([A-Z][A-Za-z]+(?!\\.*-$)){1,2}([-\\ ])?){1,2})((([A-Z][A-Za-z]+(?!\\.*-\\ $)){1,2}([-\\ ])?){1,2})$");


    QRegularExpressionMatch match = re.match(input);
    if (match.hasMatch()) {
        rezultat2.append(input);
    }

    else if (!match.hasMatch())
    {
        //qDebug() << "No Match"<< input << "<----------Remove this line from the code before submiting";
    }

}


